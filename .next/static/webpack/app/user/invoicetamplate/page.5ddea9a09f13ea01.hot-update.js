"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/user/invoicetamplate/page",{

/***/ "(app-pages-browser)/./hooks/use-invoice.ts":
/*!******************************!*\
  !*** ./hooks/use-invoice.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useInvoice: function() { return /* binding */ useInvoice; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_utils_pdf_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/utils/pdf-generator */ \"(app-pages-browser)/./lib/utils/pdf-generator.ts\");\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-toastify */ \"(app-pages-browser)/./node_modules/react-toastify/dist/index.mjs\");\n/* harmony import */ var _lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/utils/invoice-calculations */ \"(app-pages-browser)/./lib/utils/invoice-calculations.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _UserContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./UserContext */ \"(app-pages-browser)/./hooks/UserContext.tsx\");\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! formik */ \"(app-pages-browser)/./node_modules/formik/dist/formik.esm.js\");\n/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! yup */ \"(app-pages-browser)/./node_modules/yup/index.esm.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\n\nconst initialInvoiceData = {\n    userId: \"\",\n    senderDetails: {\n        logo: \"\",\n        name: \"\",\n        address: \"\"\n    },\n    recipientDetails: {\n        billTo: {\n            name: \"\",\n            address: \"\"\n        },\n        shipTo: {\n            name: \"\",\n            address: \"\"\n        }\n    },\n    invoiceDetails: {\n        number: \"\",\n        date: new Date().toISOString().split(\"T\")[0],\n        dueDate: \"\",\n        paymentTerms: \"\",\n        poNumber: \"\",\n        currency: \"USD\"\n    },\n    items: [],\n    totals: {\n        subtotal: 0,\n        tax: 0,\n        taxRate: 0,\n        shipping: 0,\n        discount: 0,\n        discountType: 0,\n        shippingType: \"percentage\",\n        total: 0,\n        amountPaid: 0,\n        balanceDue: 0\n    },\n    notes: \"\",\n    terms: \"\"\n};\nconst cleanMongoFields = (data)=>{\n    const cleaned = {\n        ...data\n    };\n    delete cleaned._id;\n    delete cleaned.__v;\n    if (Array.isArray(cleaned.items)) {\n        cleaned.items = cleaned.items.map((item)=>{\n            const cleanedItem = {\n                ...item\n            };\n            delete cleanedItem._id;\n            delete cleanedItem.__v;\n            return cleanedItem;\n        });\n    }\n    return cleaned;\n};\nconst getEmptyFields = (errors)=>{\n    var _errors_senderDetails, _errors_senderDetails1, _errors_recipientDetails_billTo, _errors_recipientDetails, _errors_recipientDetails_billTo1, _errors_recipientDetails1, _errors_invoiceDetails, _errors_invoiceDetails1, _errors_invoiceDetails2;\n    const emptyFieldMessages = [];\n    // Check sender details\n    if ((_errors_senderDetails = errors.senderDetails) === null || _errors_senderDetails === void 0 ? void 0 : _errors_senderDetails.name) emptyFieldMessages.push(\"Business Name is required\");\n    if ((_errors_senderDetails1 = errors.senderDetails) === null || _errors_senderDetails1 === void 0 ? void 0 : _errors_senderDetails1.address) emptyFieldMessages.push(\"Business Address is required\");\n    // Check recipient details\n    if ((_errors_recipientDetails = errors.recipientDetails) === null || _errors_recipientDetails === void 0 ? void 0 : (_errors_recipientDetails_billTo = _errors_recipientDetails.billTo) === null || _errors_recipientDetails_billTo === void 0 ? void 0 : _errors_recipientDetails_billTo.name) emptyFieldMessages.push(\"Bill To Name is required\");\n    if ((_errors_recipientDetails1 = errors.recipientDetails) === null || _errors_recipientDetails1 === void 0 ? void 0 : (_errors_recipientDetails_billTo1 = _errors_recipientDetails1.billTo) === null || _errors_recipientDetails_billTo1 === void 0 ? void 0 : _errors_recipientDetails_billTo1.address) emptyFieldMessages.push(\"Bill To Address is required\");\n    // Check invoice details\n    if ((_errors_invoiceDetails = errors.invoiceDetails) === null || _errors_invoiceDetails === void 0 ? void 0 : _errors_invoiceDetails.number) emptyFieldMessages.push(\"Invoice Number is required\");\n    if ((_errors_invoiceDetails1 = errors.invoiceDetails) === null || _errors_invoiceDetails1 === void 0 ? void 0 : _errors_invoiceDetails1.date) emptyFieldMessages.push(\"Invoice Date is required\");\n    if ((_errors_invoiceDetails2 = errors.invoiceDetails) === null || _errors_invoiceDetails2 === void 0 ? void 0 : _errors_invoiceDetails2.dueDate) emptyFieldMessages.push(\"Due Date is required\");\n    // Check items\n    if (errors.items && Array.isArray(errors.items)) {\n        errors.items.forEach((itemError, index)=>{\n            if (itemError === null || itemError === void 0 ? void 0 : itemError.description) emptyFieldMessages.push(\"Item \".concat(index + 1, \": Description is required\"));\n            if (itemError === null || itemError === void 0 ? void 0 : itemError.quantity) emptyFieldMessages.push(\"Item \".concat(index + 1, \": Quantity is required\"));\n            if (itemError === null || itemError === void 0 ? void 0 : itemError.rate) emptyFieldMessages.push(\"Item \".concat(index + 1, \": Rate is required\"));\n        });\n    }\n    return emptyFieldMessages;\n};\nfunction useInvoice(initialData) {\n    // const [serverErrorMessage, setServerErrorMessage] = useState('');\n    // const [serverSuccessMessage, setServerSuccessMessage] = useState('');\n    const { user } = (0,_UserContext__WEBPACK_IMPORTED_MODULE_4__.useUser)();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    // Modify initial values to use initialData if available\n    const getInitialValues = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!initialData) return initialInvoiceData;\n        return {\n            ...initialInvoiceData,\n            ...initialData,\n            invoiceDetails: {\n                ...initialData.invoiceDetails,\n                number: initialData.invoiceDetails.number,\n                date: new Date(initialData.invoiceDetails.date).toISOString().split(\"T\")[0],\n                dueDate: new Date(initialData.invoiceDetails.dueDate).toISOString().split(\"T\")[0]\n            }\n        };\n    }, [\n        initialData\n    ]);\n    const validationSchema = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>yup__WEBPACK_IMPORTED_MODULE_5__.object({\n            senderDetails: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                name: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(50, \"Sender Name must be at most 50 characters\").required(\"Business name is required\"),\n                address: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(60, \"Sender Address must be at most 60 characters\").required(\"Business address is required\")\n            }),\n            recipientDetails: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                billTo: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                    name: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(50, \"Billing Name must be at most 50 characters\").required(\"Recipient name is required\"),\n                    address: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(60, \"Billing Address must be at most 60 characters\").required(\"Billing address is required\")\n                }),\n                shipTo: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                    name: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(50, \"Shipping Name must be at most 50 characters\"),\n                    address: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(60, \"Shipping Address must be at most 60 characters\")\n                })\n            }),\n            invoiceDetails: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                number: yup__WEBPACK_IMPORTED_MODULE_5__.string().required(\"Invoice number is required\"),\n                date: yup__WEBPACK_IMPORTED_MODULE_5__.date().required(\"Invoice date is required\"),\n                dueDate: yup__WEBPACK_IMPORTED_MODULE_5__.date().required(\"Due date is required\")\n            }),\n            items: yup__WEBPACK_IMPORTED_MODULE_5__.array().of(yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                description: yup__WEBPACK_IMPORTED_MODULE_5__.string().required(\"Item description is required\"),\n                quantity: yup__WEBPACK_IMPORTED_MODULE_5__.number().min(1, \"Quantity must be at least 1\").required(\"Quantity is required\"),\n                rate: yup__WEBPACK_IMPORTED_MODULE_5__.number().min(0, \"Rate must be positive\").required(\"Rate is required\")\n            }))\n        }), []);\n    //  console.log(\"initial:\",initialData)\n    const formik = (0,formik__WEBPACK_IMPORTED_MODULE_7__.useFormik)({\n        initialValues: getInitialValues,\n        validationSchema,\n        enableReinitialize: true,\n        validateOnBlur: true,\n        validateOnChange: true,\n        onSubmit: async (values, param)=>{\n            let { setSubmitting, resetForm } = param;\n            try {\n                var _user_user;\n                // Check for validation errors first\n                const errors = await formik.validateForm(values);\n                const emptyFieldMessages = getEmptyFields(errors);\n                if (Object.keys(errors).length > 0) {\n                    // Set all fields as touched to show Formik errors\n                    formik.setTouched({\n                        senderDetails: {\n                            name: true,\n                            address: true\n                        },\n                        recipientDetails: {\n                            billTo: {\n                                name: true,\n                                address: true\n                            }\n                        },\n                        invoiceDetails: {\n                            number: true,\n                            date: true,\n                            dueDate: true\n                        },\n                        items: formik.values.items.map(()=>({\n                                description: true,\n                                quantity: true,\n                                rate: true\n                            }))\n                    }, true);\n                    // Show individual toast notifications for each empty field\n                    emptyFieldMessages.forEach((message)=>{\n                        react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(message, {\n                            position: \"bottom-right\",\n                            autoClose: 5000\n                        });\n                    });\n                    return; // Stop submission if there are validation errors\n                }\n                const isEditing = !!initialData;\n                const url = isEditing ? \"\".concat(\"http://localhost:8002\", \"/api/v1/invoice/invoices/\").concat(initialData._id) : \"\".concat(\"http://localhost:8002\", \"/api/v1/invoice/invoices\");\n                const method = isEditing ? \"put\" : \"post\";\n                // Calculate final totals\n                const calculatedTotals = {\n                    ...values.totals,\n                    subtotal: (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(values.items),\n                    tax: (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTax)((0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(values.items), values.totals.taxRate),\n                    discount: (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateDiscount)((0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(values.items), values.totals.discountType),\n                    shipping: (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateShipping)((0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(values.items), values.totals.shipping, values.totals.shippingType)\n                };\n                calculatedTotals.total = Number((0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTotal)(calculatedTotals.subtotal, calculatedTotals.tax, calculatedTotals.discount, calculatedTotals.shipping));\n                calculatedTotals.balanceDue = Number(calculatedTotals.total - calculatedTotals.amountPaid);\n                // Prepare the final values\n                let finalValues = {\n                    ...values,\n                    userId: user === null || user === void 0 ? void 0 : (_user_user = user.user) === null || _user_user === void 0 ? void 0 : _user_user._id,\n                    totals: calculatedTotals\n                };\n                if (isEditing) {\n                    // For updates, ensure we keep the original invoice details\n                    finalValues = {\n                        ...finalValues,\n                        invoiceDetails: {\n                            ...finalValues.invoiceDetails,\n                            number: initialData.invoiceDetails.number,\n                            date: initialData.invoiceDetails.date,\n                            dueDate: initialData.invoiceDetails.dueDate\n                        }\n                    };\n                }\n                // Clean MongoDB fields\n                finalValues = cleanMongoFields(finalValues);\n                const response = await axios__WEBPACK_IMPORTED_MODULE_8__[\"default\"][method](url, finalValues, {\n                    withCredentials: true\n                });\n                if (response.data) {\n                    react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.success(isEditing ? \"Invoice updated successfully\" : \"Invoice saved successfully\", {\n                        position: \"bottom-right\"\n                    });\n                    if (!isEditing) {\n                        resetForm();\n                        await generateInvoiceNumber();\n                        router.push(\"/user/d/\".concat(response.data.invoice._id)); // Redirect to /user/myinvoice when a new invoice is saved\n                    } else {\n                        router.push(\"/user/d/\".concat(response.data._id)); // Redirect to /user/d/[id] when an invoice is updated\n                    }\n                }\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Operation failed:\", error);\n                react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(axios__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isAxiosError(error) ? ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || error.message : \"Something went wrong. Please try again.\", {\n                    position: \"bottom-right\"\n                });\n            // setTimeout(() => setServerErrorMessage(''), 5000);\n            } finally{\n                setSubmitting(false);\n            }\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Only generate invoice number for new invoices\n        if ((user === null || user === void 0 ? void 0 : user.user._id) && !initialData) {\n            generateInvoiceNumber();\n        }\n    }, [\n        user,\n        initialData\n    ]);\n    const generateInvoiceNumber = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!(user === null || user === void 0 ? void 0 : user.user._id)) return;\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_8__[\"default\"].get(\"\".concat(\"http://localhost:8002\", \"/api/v1/invoice/invoices/userId/\").concat(user.user._id));\n            const invoices = response.data;\n            let newInvoiceNumber = \"INV-0001\";\n            if ((invoices === null || invoices === void 0 ? void 0 : invoices.length) > 0) {\n                var _latestInvoice_invoiceDetails;\n                const latestInvoice = invoices[invoices.length - 1];\n                if ((_latestInvoice_invoiceDetails = latestInvoice.invoiceDetails) === null || _latestInvoice_invoiceDetails === void 0 ? void 0 : _latestInvoice_invoiceDetails.number) {\n                    const lastNumber = parseInt(latestInvoice.invoiceDetails.number.replace(\"INV-\", \"\"), 10);\n                    newInvoiceNumber = \"INV-\".concat(String(lastNumber + 1).padStart(4, \"0\"));\n                }\n            }\n            formik.setFieldValue(\"invoiceDetails.number\", newInvoiceNumber);\n            formik.setFieldValue(\"senderDetails.name\", user.user.firstName || \"\");\n            formik.setFieldValue(\"senderDetails.address\", user.user.address || \"\");\n            formik.setFieldValue(\"senderDetails.logo\", user.user.logo || \"\");\n        } catch (error) {\n            console.error(\"Error fetching invoices:\", error);\n        }\n    }, [\n        user === null || user === void 0 ? void 0 : user.user._id,\n        formik.setFieldValue\n    ]);\n    const generatePDF = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        try {\n            const invoiceDataWithId = {\n                ...formik.values,\n                _id: (initialData === null || initialData === void 0 ? void 0 : initialData._id) || \"dummy-id\"\n            };\n            const pdfBlob = await (0,_lib_utils_pdf_generator__WEBPACK_IMPORTED_MODULE_1__.generateInvoicePDF)(invoiceDataWithId);\n            const url = URL.createObjectURL(pdfBlob);\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.download = \"invoice-\".concat(formik.values.invoiceDetails.number || \"draft\", \".pdf\");\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            URL.revokeObjectURL(url);\n        } catch (error) {\n            console.error(\"Error generating PDF:\", error);\n        }\n    }, [\n        formik.values,\n        initialData\n    ]);\n    // const generatePDF = useCallback(async () => {\n    //   try {\n    //     const invoiceDataWithId = {\n    //       ...formik.values,\n    //       _id: initialData?._id || 'dummy-id', // Add a dummy or real _id here\n    //     };\n    //     const pdfBlob = await generateInvoicedoc(invoiceDataWithId);\n    //     const url = URL.createObjectURL(pdfBlob);\n    //     const link = document.createElement('a');\n    //     link.href = url;\n    //     link.download = `invoice-${formik.values.invoiceDetails.number || 'draft'}.pdf`;\n    //     document.body.appendChild(link);\n    //     link.click();\n    //     document.body.removeChild(link);\n    //     URL.revokeObjectURL(url);\n    //   } catch (error) {\n    //     console.error('Error generating PDF:', error);\n    //   }\n    // }, [formik.values, initialData]);\n    // Update functions that work with formik\n    const updateSenderDetails = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((details)=>{\n        formik.setFieldValue(\"senderDetails\", details);\n    }, [\n        formik.setFieldValue\n    ]);\n    const updateRecipientDetails = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((details)=>{\n        formik.setFieldValue(\"recipientDetails\", details);\n    }, [\n        formik.setFieldValue\n    ]);\n    const updateInvoiceDetails = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((details)=>{\n        formik.setFieldValue(\"invoiceDetails\", details);\n    }, [\n        formik.setFieldValue\n    ]);\n    const updateItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((items)=>{\n        formik.setFieldValue(\"items\", items);\n        // Recalculate totals\n        const subtotal = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(items);\n        const tax = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTax)(subtotal, formik.values.totals.taxRate);\n        const discount = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateDiscount)(subtotal, formik.values.totals.discountType);\n        const shipping = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateShipping)(subtotal, formik.values.totals.shipping, formik.values.totals.shippingType);\n        const total = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTotal)(subtotal, tax, discount, shipping);\n        const balanceDue = total - formik.values.totals.amountPaid;\n        // console.log(balanceDue)\n        formik.setFieldValue(\"totals\", {\n            ...formik.values.totals,\n            subtotal,\n            tax,\n            discount,\n            total,\n            balanceDue\n        });\n    }, [\n        formik.setFieldValue,\n        formik.values.totals\n    ]);\n    const updateTotals = (totals)=>{\n        // Recalculate subtotal, tax, discount, and shipping based on the items\n        const subtotal = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(formik.values.items);\n        const tax = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTax)(subtotal, totals.taxRate);\n        const discount = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateDiscount)(subtotal, totals.discountType);\n        const shipping = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateShipping)(subtotal, totals.shipping, totals.shippingType);\n        // Keep the total as the calculated value, don't modify it based on the amountPaid\n        const total = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTotal)(subtotal, tax, discount, shipping);\n        // Only update the balance due, subtracting the amount paid from the total\n        const balanceDue = total - totals.amountPaid;\n        // Update formik with the new totals\n        formik.setFieldValue(\"totals\", {\n            ...totals,\n            subtotal,\n            tax,\n            discount,\n            total,\n            balanceDue\n        });\n    };\n    const updateNotes = (notes)=>{\n        formik.setFieldValue(\"notes\", notes);\n    };\n    const updateTerms = (terms)=>{\n        formik.setFieldValue(\"terms\", terms);\n    };\n    const saveInvoice = async ()=>{\n        // Validate form and show both Formik errors and toast notifications\n        const errors = await formik.validateForm();\n        const emptyFieldMessages = getEmptyFields(errors);\n        // Set all fields as touched to show Formik errors\n        formik.setTouched({\n            senderDetails: {\n                name: true,\n                address: true\n            },\n            recipientDetails: {\n                billTo: {\n                    name: true,\n                    address: true\n                }\n            },\n            invoiceDetails: {\n                number: true,\n                date: true,\n                dueDate: true\n            },\n            items: formik.values.items.map(()=>({\n                    description: true,\n                    quantity: true,\n                    rate: true\n                }))\n        }, true);\n        // Show individual toast notifications for each empty field\n        emptyFieldMessages.forEach((message)=>{\n            react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(message, {\n                position: \"bottom-right\",\n                autoClose: 5000\n            });\n        });\n        // Continue with form submission\n        formik.handleSubmit();\n    };\n    return {\n        invoiceData: formik.values,\n        updateSenderDetails,\n        updateRecipientDetails,\n        updateInvoiceDetails,\n        updateItems,\n        updateTotals,\n        updateNotes,\n        updateTerms,\n        generatePDF,\n        saveInvoice,\n        formErrors: formik.errors,\n        formTouched: formik.touched,\n        formik\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-invoice.ts\n"));

/***/ })

});