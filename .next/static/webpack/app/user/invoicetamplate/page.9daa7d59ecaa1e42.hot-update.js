"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/user/invoicetamplate/page",{

/***/ "(app-pages-browser)/./hooks/use-invoice.ts":
/*!******************************!*\
  !*** ./hooks/use-invoice.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useInvoice: function() { return /* binding */ useInvoice; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_utils_pdf_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/utils/pdf-generator */ \"(app-pages-browser)/./lib/utils/pdf-generator.ts\");\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-toastify */ \"(app-pages-browser)/./node_modules/react-toastify/dist/index.mjs\");\n/* harmony import */ var _lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/utils/invoice-calculations */ \"(app-pages-browser)/./lib/utils/invoice-calculations.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _UserContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./UserContext */ \"(app-pages-browser)/./hooks/UserContext.tsx\");\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! formik */ \"(app-pages-browser)/./node_modules/formik/dist/formik.esm.js\");\n/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! yup */ \"(app-pages-browser)/./node_modules/yup/index.esm.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\n\nconst initialInvoiceData = {\n    userId: \"\",\n    senderDetails: {\n        logo: \"\",\n        name: \"\",\n        address: \"\"\n    },\n    recipientDetails: {\n        billTo: {\n            name: \"\",\n            address: \"\"\n        },\n        shipTo: {\n            name: \"\",\n            address: \"\"\n        }\n    },\n    invoiceDetails: {\n        number: \"\",\n        date: new Date().toISOString().split(\"T\")[0],\n        dueDate: \"\",\n        paymentTerms: \"\",\n        poNumber: \"\",\n        currency: \"USD\"\n    },\n    items: [],\n    totals: {\n        subtotal: 0,\n        tax: 0,\n        taxRate: 0,\n        shipping: 0,\n        discount: 0,\n        discountType: 0,\n        shippingType: \"percentage\",\n        total: 0,\n        amountPaid: 0,\n        balanceDue: 0\n    },\n    notes: \"\",\n    terms: \"\"\n};\nconst cleanMongoFields = (data)=>{\n    const cleaned = {\n        ...data\n    };\n    delete cleaned._id;\n    delete cleaned.__v;\n    if (Array.isArray(cleaned.items)) {\n        cleaned.items = cleaned.items.map((item)=>{\n            const cleanedItem = {\n                ...item\n            };\n            delete cleanedItem._id;\n            delete cleanedItem.__v;\n            return cleanedItem;\n        });\n    }\n    return cleaned;\n};\nconst getEmptyFields = (errors)=>{\n    var _errors_senderDetails, _errors_senderDetails1, _errors_recipientDetails_billTo, _errors_recipientDetails, _errors_recipientDetails_billTo1, _errors_recipientDetails1, _errors_invoiceDetails, _errors_invoiceDetails1, _errors_invoiceDetails2;\n    const emptyFieldMessages = [];\n    // Check sender details\n    if ((_errors_senderDetails = errors.senderDetails) === null || _errors_senderDetails === void 0 ? void 0 : _errors_senderDetails.name) emptyFieldMessages.push(\"Business Name is required\");\n    if ((_errors_senderDetails1 = errors.senderDetails) === null || _errors_senderDetails1 === void 0 ? void 0 : _errors_senderDetails1.address) emptyFieldMessages.push(\"Business Address is required\");\n    // Check recipient details\n    if ((_errors_recipientDetails = errors.recipientDetails) === null || _errors_recipientDetails === void 0 ? void 0 : (_errors_recipientDetails_billTo = _errors_recipientDetails.billTo) === null || _errors_recipientDetails_billTo === void 0 ? void 0 : _errors_recipientDetails_billTo.name) emptyFieldMessages.push(\"Bill To Name is required\");\n    if ((_errors_recipientDetails1 = errors.recipientDetails) === null || _errors_recipientDetails1 === void 0 ? void 0 : (_errors_recipientDetails_billTo1 = _errors_recipientDetails1.billTo) === null || _errors_recipientDetails_billTo1 === void 0 ? void 0 : _errors_recipientDetails_billTo1.address) emptyFieldMessages.push(\"Bill To Address is required\");\n    // Check invoice details\n    if ((_errors_invoiceDetails = errors.invoiceDetails) === null || _errors_invoiceDetails === void 0 ? void 0 : _errors_invoiceDetails.number) emptyFieldMessages.push(\"Invoice Number is required\");\n    if ((_errors_invoiceDetails1 = errors.invoiceDetails) === null || _errors_invoiceDetails1 === void 0 ? void 0 : _errors_invoiceDetails1.date) emptyFieldMessages.push(\"Invoice Date is required\");\n    if ((_errors_invoiceDetails2 = errors.invoiceDetails) === null || _errors_invoiceDetails2 === void 0 ? void 0 : _errors_invoiceDetails2.dueDate) emptyFieldMessages.push(\"Due Date is required\");\n    // Check items\n    if (errors.items && Array.isArray(errors.items)) {\n        errors.items.forEach((itemError, index)=>{\n            if (itemError === null || itemError === void 0 ? void 0 : itemError.description) emptyFieldMessages.push(\"Item \".concat(index + 1, \": Description is required\"));\n            if (itemError === null || itemError === void 0 ? void 0 : itemError.quantity) emptyFieldMessages.push(\"Item \".concat(index + 1, \": Quantity is required\"));\n            if (itemError === null || itemError === void 0 ? void 0 : itemError.rate) emptyFieldMessages.push(\"Item \".concat(index + 1, \": Rate is required\"));\n        });\n    }\n    return emptyFieldMessages;\n};\nfunction useInvoice(initialData) {\n    // const [serverErrorMessage, setServerErrorMessage] = useState('');\n    // const [serverSuccessMessage, setServerSuccessMessage] = useState('');\n    const { user } = (0,_UserContext__WEBPACK_IMPORTED_MODULE_4__.useUser)();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    const [modalOpen, setModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Modify initial values to use initialData if available\n    const getInitialValues = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!initialData) return initialInvoiceData;\n        return {\n            ...initialInvoiceData,\n            ...initialData,\n            invoiceDetails: {\n                ...initialData.invoiceDetails,\n                number: initialData.invoiceDetails.number,\n                date: new Date(initialData.invoiceDetails.date).toISOString().split(\"T\")[0],\n                dueDate: new Date(initialData.invoiceDetails.dueDate).toISOString().split(\"T\")[0]\n            }\n        };\n    }, [\n        initialData\n    ]);\n    const validationSchema = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>yup__WEBPACK_IMPORTED_MODULE_5__.object({\n            senderDetails: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                name: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(50, \"Sender Name must be at most 50 characters\").required(\"Business name is required\"),\n                address: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(60, \"Sender Address must be at most 60 characters\").required(\"Business address is required\")\n            }),\n            recipientDetails: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                billTo: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                    name: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(50, \"Billing Name must be at most 50 characters\").required(\"Recipient name is required\"),\n                    address: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(60, \"Billing Address must be at most 60 characters\").required(\"Billing address is required\")\n                }),\n                shipTo: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                    name: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(50, \"Shipping Name must be at most 50 characters\"),\n                    address: yup__WEBPACK_IMPORTED_MODULE_5__.string().max(60, \"Shipping Address must be at most 60 characters\")\n                })\n            }),\n            invoiceDetails: yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                number: yup__WEBPACK_IMPORTED_MODULE_5__.string().required(\"Invoice number is required\"),\n                date: yup__WEBPACK_IMPORTED_MODULE_5__.date().required(\"Invoice date is required\"),\n                dueDate: yup__WEBPACK_IMPORTED_MODULE_5__.date().required(\"Due date is required\")\n            }),\n            items: yup__WEBPACK_IMPORTED_MODULE_5__.array().of(yup__WEBPACK_IMPORTED_MODULE_5__.object({\n                description: yup__WEBPACK_IMPORTED_MODULE_5__.string().required(\"Item description is required\"),\n                quantity: yup__WEBPACK_IMPORTED_MODULE_5__.number().min(1, \"Quantity must be at least 1\").required(\"Quantity is required\"),\n                rate: yup__WEBPACK_IMPORTED_MODULE_5__.number().min(0, \"Rate must be positive\").required(\"Rate is required\")\n            }))\n        }), []);\n    //  console.log(\"initial:\",initialData)\n    const formik = (0,formik__WEBPACK_IMPORTED_MODULE_7__.useFormik)({\n        initialValues: getInitialValues,\n        validationSchema,\n        enableReinitialize: true,\n        validateOnBlur: true,\n        validateOnChange: true,\n        onSubmit: async (values, param)=>{\n            let { setSubmitting, resetForm } = param;\n            try {\n                var _user_user;\n                // Check for validation errors first\n                const errors = await formik.validateForm(values);\n                const emptyFieldMessages = getEmptyFields(errors);\n                if (Object.keys(errors).length > 0) {\n                    // Set all fields as touched to show Formik errors\n                    formik.setTouched({\n                        senderDetails: {\n                            name: true,\n                            address: true\n                        },\n                        recipientDetails: {\n                            billTo: {\n                                name: true,\n                                address: true\n                            }\n                        },\n                        invoiceDetails: {\n                            number: true,\n                            date: true,\n                            dueDate: true\n                        },\n                        items: formik.values.items.map(()=>({\n                                description: true,\n                                quantity: true,\n                                rate: true\n                            }))\n                    }, true);\n                    // Show individual toast notifications for each empty field\n                    emptyFieldMessages.forEach((message)=>{\n                        react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(message, {\n                            position: \"bottom-right\",\n                            autoClose: 5000\n                        });\n                    });\n                    return; // Stop submission if there are validation errors\n                }\n                const isEditing = !!initialData;\n                const url = isEditing ? \"\".concat(\"http://localhost:8002\", \"/api/v1/invoice/invoices/\").concat(initialData._id) : \"\".concat(\"http://localhost:8002\", \"/api/v1/invoice/invoices\");\n                const method = isEditing ? \"put\" : \"post\";\n                // Calculate final totals\n                const calculatedTotals = {\n                    ...values.totals,\n                    subtotal: (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(values.items),\n                    tax: (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTax)((0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(values.items), values.totals.taxRate),\n                    discount: (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateDiscount)((0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(values.items), values.totals.discountType),\n                    shipping: (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateShipping)((0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(values.items), values.totals.shipping, values.totals.shippingType)\n                };\n                calculatedTotals.total = Number((0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTotal)(calculatedTotals.subtotal, calculatedTotals.tax, calculatedTotals.discount, calculatedTotals.shipping));\n                calculatedTotals.balanceDue = Number(calculatedTotals.total - calculatedTotals.amountPaid);\n                // Prepare the final values\n                let finalValues = {\n                    ...values,\n                    userId: user === null || user === void 0 ? void 0 : (_user_user = user.user) === null || _user_user === void 0 ? void 0 : _user_user._id,\n                    totals: calculatedTotals\n                };\n                if (isEditing) {\n                    // For updates, ensure we keep the original invoice details\n                    finalValues = {\n                        ...finalValues,\n                        invoiceDetails: {\n                            ...finalValues.invoiceDetails,\n                            number: initialData.invoiceDetails.number,\n                            date: initialData.invoiceDetails.date,\n                            dueDate: initialData.invoiceDetails.dueDate\n                        }\n                    };\n                }\n                // Clean MongoDB fields\n                finalValues = cleanMongoFields(finalValues);\n                const response = await axios__WEBPACK_IMPORTED_MODULE_8__[\"default\"][method](url, finalValues, {\n                    withCredentials: true\n                });\n                if (response.data) {\n                    react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.success(isEditing ? \"Invoice updated successfully\" : \"Invoice saved successfully\", {\n                        position: \"bottom-right\"\n                    });\n                    if (!isEditing) {\n                        resetForm();\n                        await generateInvoiceNumber();\n                        setModalOpen(true);\n                        router.push(\"/user/d/\".concat(response.data.invoice._id)); // Redirect to /user/myinvoice when a new invoice is saved\n                    } else {\n                        router.push(\"/user/d/\".concat(response.data._id)); // Redirect to /user/d/[id] when an invoice is updated\n                    }\n                }\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Operation failed:\", error);\n                react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(axios__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isAxiosError(error) ? ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || error.message : \"Something went wrong. Please try again.\", {\n                    position: \"bottom-right\"\n                });\n            // setTimeout(() => setServerErrorMessage(''), 5000);\n            } finally{\n                setSubmitting(false);\n            }\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Only generate invoice number for new invoices\n        if ((user === null || user === void 0 ? void 0 : user.user._id) && !initialData) {\n            generateInvoiceNumber();\n        }\n    }, [\n        user,\n        initialData\n    ]);\n    const generateInvoiceNumber = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!(user === null || user === void 0 ? void 0 : user.user._id)) return;\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_8__[\"default\"].get(\"\".concat(\"http://localhost:8002\", \"/api/v1/invoice/invoices/userId/\").concat(user.user._id));\n            const invoices = response.data;\n            let newInvoiceNumber = \"INV-0001\";\n            if ((invoices === null || invoices === void 0 ? void 0 : invoices.length) > 0) {\n                var _latestInvoice_invoiceDetails;\n                const latestInvoice = invoices[invoices.length - 1];\n                if ((_latestInvoice_invoiceDetails = latestInvoice.invoiceDetails) === null || _latestInvoice_invoiceDetails === void 0 ? void 0 : _latestInvoice_invoiceDetails.number) {\n                    const lastNumber = parseInt(latestInvoice.invoiceDetails.number.replace(\"INV-\", \"\"), 10);\n                    newInvoiceNumber = \"INV-\".concat(String(lastNumber + 1).padStart(4, \"0\"));\n                }\n            }\n            formik.setFieldValue(\"invoiceDetails.number\", newInvoiceNumber);\n            formik.setFieldValue(\"senderDetails.name\", user.user.firstName || \"\");\n            formik.setFieldValue(\"senderDetails.address\", user.user.address || \"\");\n            formik.setFieldValue(\"senderDetails.logo\", user.user.logo || \"\");\n        } catch (error) {\n            console.error(\"Error fetching invoices:\", error);\n        }\n    }, [\n        user === null || user === void 0 ? void 0 : user.user._id,\n        formik.setFieldValue\n    ]);\n    const generatePDF = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        try {\n            const invoiceDataWithId = {\n                ...formik.values,\n                _id: (initialData === null || initialData === void 0 ? void 0 : initialData._id) || \"dummy-id\"\n            };\n            const pdfBlob = await (0,_lib_utils_pdf_generator__WEBPACK_IMPORTED_MODULE_1__.generateInvoicePDF)(invoiceDataWithId);\n            const url = URL.createObjectURL(pdfBlob);\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.download = \"invoice-\".concat(formik.values.invoiceDetails.number || \"draft\", \".pdf\");\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            URL.revokeObjectURL(url);\n        } catch (error) {\n            console.error(\"Error generating PDF:\", error);\n        }\n    }, [\n        formik.values,\n        initialData\n    ]);\n    // const generatePDF = useCallback(async () => {\n    //   try {\n    //     const invoiceDataWithId = {\n    //       ...formik.values,\n    //       _id: initialData?._id || 'dummy-id', // Add a dummy or real _id here\n    //     };\n    //     const pdfBlob = await generateInvoicedoc(invoiceDataWithId);\n    //     const url = URL.createObjectURL(pdfBlob);\n    //     const link = document.createElement('a');\n    //     link.href = url;\n    //     link.download = `invoice-${formik.values.invoiceDetails.number || 'draft'}.pdf`;\n    //     document.body.appendChild(link);\n    //     link.click();\n    //     document.body.removeChild(link);\n    //     URL.revokeObjectURL(url);\n    //   } catch (error) {\n    //     console.error('Error generating PDF:', error);\n    //   }\n    // }, [formik.values, initialData]);\n    // Update functions that work with formik\n    const updateSenderDetails = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((details)=>{\n        formik.setFieldValue(\"senderDetails\", details);\n    }, [\n        formik.setFieldValue\n    ]);\n    const updateRecipientDetails = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((details)=>{\n        formik.setFieldValue(\"recipientDetails\", details);\n    }, [\n        formik.setFieldValue\n    ]);\n    const updateInvoiceDetails = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((details)=>{\n        formik.setFieldValue(\"invoiceDetails\", details);\n    }, [\n        formik.setFieldValue\n    ]);\n    const updateItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((items)=>{\n        formik.setFieldValue(\"items\", items);\n        // Recalculate totals\n        const subtotal = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(items);\n        const tax = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTax)(subtotal, formik.values.totals.taxRate);\n        const discount = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateDiscount)(subtotal, formik.values.totals.discountType);\n        const shipping = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateShipping)(subtotal, formik.values.totals.shipping, formik.values.totals.shippingType);\n        const total = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTotal)(subtotal, tax, discount, shipping);\n        const balanceDue = total - formik.values.totals.amountPaid;\n        // console.log(balanceDue)\n        formik.setFieldValue(\"totals\", {\n            ...formik.values.totals,\n            subtotal,\n            tax,\n            discount,\n            total,\n            balanceDue\n        });\n    }, [\n        formik.setFieldValue,\n        formik.values.totals\n    ]);\n    const updateTotals = (totals)=>{\n        // Recalculate subtotal, tax, discount, and shipping based on the items\n        const subtotal = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateSubtotal)(formik.values.items);\n        const tax = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTax)(subtotal, totals.taxRate);\n        const discount = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateDiscount)(subtotal, totals.discountType);\n        const shipping = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateShipping)(subtotal, totals.shipping, totals.shippingType);\n        // Keep the total as the calculated value, don't modify it based on the amountPaid\n        const total = (0,_lib_utils_invoice_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateTotal)(subtotal, tax, discount, shipping);\n        // Only update the balance due, subtracting the amount paid from the total\n        const balanceDue = total - totals.amountPaid;\n        // Update formik with the new totals\n        formik.setFieldValue(\"totals\", {\n            ...totals,\n            subtotal,\n            tax,\n            discount,\n            total,\n            balanceDue\n        });\n    };\n    const updateNotes = (notes)=>{\n        formik.setFieldValue(\"notes\", notes);\n    };\n    const updateTerms = (terms)=>{\n        formik.setFieldValue(\"terms\", terms);\n    };\n    const saveInvoice = async ()=>{\n        // Validate form and show both Formik errors and toast notifications\n        const errors = await formik.validateForm();\n        const emptyFieldMessages = getEmptyFields(errors);\n        // Set all fields as touched to show Formik errors\n        formik.setTouched({\n            senderDetails: {\n                name: true,\n                address: true\n            },\n            recipientDetails: {\n                billTo: {\n                    name: true,\n                    address: true\n                }\n            },\n            invoiceDetails: {\n                number: true,\n                date: true,\n                dueDate: true\n            },\n            items: formik.values.items.map(()=>({\n                    description: true,\n                    quantity: true,\n                    rate: true\n                }))\n        }, true);\n        // Show individual toast notifications for each empty field\n        emptyFieldMessages.forEach((message)=>{\n            react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(message, {\n                position: \"bottom-right\",\n                autoClose: 5000\n            });\n        });\n        // Continue with form submission\n        if (Object.keys(errors).length === 0) {\n            try {\n                await formik.submitForm();\n                // setSaveSuccess(true);\n                setModalOpen(true);\n            } catch (error) {\n                console.error(\"Error saving invoice:\", error);\n            }\n        }\n    // formik.handleSubmit();\n    };\n    return {\n        invoiceData: formik.values,\n        updateSenderDetails,\n        updateRecipientDetails,\n        updateInvoiceDetails,\n        updateItems,\n        updateTotals,\n        updateNotes,\n        updateTerms,\n        generatePDF,\n        saveInvoice,\n        formErrors: formik.errors,\n        formTouched: formik.touched,\n        formik\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZS1pbnZvaWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFrRTtBQUVKO0FBQ3ZCO0FBT0k7QUFDakI7QUFDYztBQUNMO0FBRVI7QUFDaUI7QUFFNUMsTUFBTWdCLHFCQUErQztJQUNuREMsUUFBUTtJQUNSQyxlQUFlO1FBQ2JDLE1BQU07UUFDTkMsTUFBTTtRQUNOQyxTQUFTO0lBQ1g7SUFDQUMsa0JBQWtCO1FBQ2hCQyxRQUFRO1lBQ05ILE1BQU07WUFDTkMsU0FBUztRQUNYO1FBQ0FHLFFBQVE7WUFDTkosTUFBTTtZQUNOQyxTQUFTO1FBQ1g7SUFDRjtJQUNBSSxnQkFBZ0I7UUFDZEMsUUFBUTtRQUNSQyxNQUFNLElBQUlDLE9BQU9DLFdBQVcsR0FBR0MsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzVDQyxTQUFTO1FBQ1RDLGNBQWM7UUFDZEMsVUFBVTtRQUNWQyxVQUFVO0lBQ1o7SUFDQUMsT0FBTyxFQUFFO0lBQ1RDLFFBQVE7UUFDTkMsVUFBVTtRQUNWQyxLQUFLO1FBQ0xDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxVQUFVO1FBQ1ZDLGNBQWM7UUFDZEMsY0FBYztRQUNkQyxPQUFPO1FBQ1BDLFlBQVk7UUFDWkMsWUFBWTtJQUNkO0lBQ0FDLE9BQU87SUFDUEMsT0FBTztBQUNUO0FBSUEsTUFBTUMsbUJBQW1CLENBQUNDO0lBQ3hCLE1BQU1DLFVBQVU7UUFBRSxHQUFHRCxJQUFJO0lBQUM7SUFDMUIsT0FBT0MsUUFBUUMsR0FBRztJQUNsQixPQUFPRCxRQUFRRSxHQUFHO0lBRWxCLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ0osUUFBUWhCLEtBQUssR0FBRztRQUNoQ2dCLFFBQVFoQixLQUFLLEdBQUdnQixRQUFRaEIsS0FBSyxDQUFDcUIsR0FBRyxDQUFDLENBQUNDO1lBQ2pDLE1BQU1DLGNBQWM7Z0JBQUUsR0FBR0QsSUFBSTtZQUFDO1lBQzlCLE9BQU9DLFlBQVlOLEdBQUc7WUFD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L19OX0UvLi9ob29rcy91c2UtaW52b2ljZS50cz9kMTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IEludm9pY2VEYXRhIH0gZnJvbSBcIi4uL3R5cGVzL2ludm9pY2VcIjtcclxuaW1wb3J0IHtnZW5lcmF0ZUludm9pY2VQREZ9IGZyb20gXCIuLi9saWIvdXRpbHMvcGRmLWdlbmVyYXRvclwiO1xyXG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gXCJyZWFjdC10b2FzdGlmeVwiO1xyXG5pbXBvcnQge1xyXG4gIGNhbGN1bGF0ZVN1YnRvdGFsLFxyXG4gIGNhbGN1bGF0ZVRheCxcclxuICBjYWxjdWxhdGVEaXNjb3VudCxcclxuICBjYWxjdWxhdGVUb3RhbCxcclxuICBjYWxjdWxhdGVTaGlwcGluZyxcclxufSBmcm9tIFwiLi4vbGliL3V0aWxzL2ludm9pY2UtY2FsY3VsYXRpb25zXCI7XHJcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcclxuaW1wb3J0IHsgdXNlVXNlciB9IGZyb20gXCIuL1VzZXJDb250ZXh0XCI7XHJcbmltcG9ydCB7IHVzZUZvcm1payB9IGZyb20gJ2Zvcm1payc7XHJcbmltcG9ydCB7IEZvcm1pa0Vycm9ycyB9IGZyb20gXCJmb3JtaWtcIjtcclxuaW1wb3J0ICogYXMgWXVwIGZyb20gXCJ5dXBcIjtcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xyXG5cclxuY29uc3QgaW5pdGlhbEludm9pY2VEYXRhOiBPbWl0PEludm9pY2VEYXRhLCAnX2lkJz4gPSB7XHJcbiAgdXNlcklkOiBcIlwiLFxyXG4gIHNlbmRlckRldGFpbHM6IHtcclxuICAgIGxvZ286IFwiXCIsXHJcbiAgICBuYW1lOiBcIlwiLFxyXG4gICAgYWRkcmVzczogXCJcIixcclxuICB9LFxyXG4gIHJlY2lwaWVudERldGFpbHM6IHtcclxuICAgIGJpbGxUbzoge1xyXG4gICAgICBuYW1lOiBcIlwiLFxyXG4gICAgICBhZGRyZXNzOiBcIlwiLFxyXG4gICAgfSxcclxuICAgIHNoaXBUbzoge1xyXG4gICAgICBuYW1lOiBcIlwiLFxyXG4gICAgICBhZGRyZXNzOiBcIlwiLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIGludm9pY2VEZXRhaWxzOiB7XHJcbiAgICBudW1iZXI6IFwiXCIsXHJcbiAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXSxcclxuICAgIGR1ZURhdGU6IFwiXCIsXHJcbiAgICBwYXltZW50VGVybXM6IFwiXCIsXHJcbiAgICBwb051bWJlcjogXCJcIixcclxuICAgIGN1cnJlbmN5OiBcIlVTRFwiLFxyXG4gIH0sXHJcbiAgaXRlbXM6IFtdLFxyXG4gIHRvdGFsczoge1xyXG4gICAgc3VidG90YWw6IDAsXHJcbiAgICB0YXg6IDAsXHJcbiAgICB0YXhSYXRlOiAwLFxyXG4gICAgc2hpcHBpbmc6IDAsXHJcbiAgICBkaXNjb3VudDogMCxcclxuICAgIGRpc2NvdW50VHlwZTogMCxcclxuICAgIHNoaXBwaW5nVHlwZTogXCJwZXJjZW50YWdlXCIsXHJcbiAgICB0b3RhbDogMCxcclxuICAgIGFtb3VudFBhaWQ6IDAsXHJcbiAgICBiYWxhbmNlRHVlOiAwLFxyXG4gIH0sXHJcbiAgbm90ZXM6IFwiXCIsXHJcbiAgdGVybXM6IFwiXCIsXHJcbn07XHJcblxyXG5cclxuXHJcbmNvbnN0IGNsZWFuTW9uZ29GaWVsZHMgPSAoZGF0YTogYW55KTogYW55ID0+IHtcclxuICBjb25zdCBjbGVhbmVkID0geyAuLi5kYXRhIH07XHJcbiAgZGVsZXRlIGNsZWFuZWQuX2lkO1xyXG4gIGRlbGV0ZSBjbGVhbmVkLl9fdjtcclxuICBcclxuICBpZiAoQXJyYXkuaXNBcnJheShjbGVhbmVkLml0ZW1zKSkge1xyXG4gICAgY2xlYW5lZC5pdGVtcyA9IGNsZWFuZWQuaXRlbXMubWFwKChpdGVtOiBhbnkpID0+IHtcclxuICAgICAgY29uc3QgY2xlYW5lZEl0ZW0gPSB7IC4uLml0ZW0gfTtcclxuICAgICAgZGVsZXRlIGNsZWFuZWRJdGVtLl9pZDtcclxuICAgICAgZGVsZXRlIGNsZWFuZWRJdGVtLl9fdjtcclxuICAgICAgcmV0dXJuIGNsZWFuZWRJdGVtO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHJldHVybiBjbGVhbmVkO1xyXG59O1xyXG5jb25zdCBnZXRFbXB0eUZpZWxkcyA9IChlcnJvcnM6IEZvcm1pa0Vycm9yczxJbnZvaWNlRGF0YT4pID0+IHtcclxuICBjb25zdCBlbXB0eUZpZWxkTWVzc2FnZXMgPSBbXTtcclxuICBcclxuICAvLyBDaGVjayBzZW5kZXIgZGV0YWlsc1xyXG4gIGlmIChlcnJvcnMuc2VuZGVyRGV0YWlscz8ubmFtZSkgZW1wdHlGaWVsZE1lc3NhZ2VzLnB1c2goJ0J1c2luZXNzIE5hbWUgaXMgcmVxdWlyZWQnKTtcclxuICBpZiAoZXJyb3JzLnNlbmRlckRldGFpbHM/LmFkZHJlc3MpIGVtcHR5RmllbGRNZXNzYWdlcy5wdXNoKCdCdXNpbmVzcyBBZGRyZXNzIGlzIHJlcXVpcmVkJyk7XHJcbiAgXHJcbiAgLy8gQ2hlY2sgcmVjaXBpZW50IGRldGFpbHNcclxuICBpZiAoZXJyb3JzLnJlY2lwaWVudERldGFpbHM/LmJpbGxUbz8ubmFtZSkgZW1wdHlGaWVsZE1lc3NhZ2VzLnB1c2goJ0JpbGwgVG8gTmFtZSBpcyByZXF1aXJlZCcpO1xyXG4gIGlmIChlcnJvcnMucmVjaXBpZW50RGV0YWlscz8uYmlsbFRvPy5hZGRyZXNzKSBlbXB0eUZpZWxkTWVzc2FnZXMucHVzaCgnQmlsbCBUbyBBZGRyZXNzIGlzIHJlcXVpcmVkJyk7XHJcbiAgXHJcbiAgLy8gQ2hlY2sgaW52b2ljZSBkZXRhaWxzXHJcbiAgaWYgKGVycm9ycy5pbnZvaWNlRGV0YWlscz8ubnVtYmVyKSBlbXB0eUZpZWxkTWVzc2FnZXMucHVzaCgnSW52b2ljZSBOdW1iZXIgaXMgcmVxdWlyZWQnKTtcclxuICBpZiAoZXJyb3JzLmludm9pY2VEZXRhaWxzPy5kYXRlKSBlbXB0eUZpZWxkTWVzc2FnZXMucHVzaCgnSW52b2ljZSBEYXRlIGlzIHJlcXVpcmVkJyk7XHJcbiAgaWYgKGVycm9ycy5pbnZvaWNlRGV0YWlscz8uZHVlRGF0ZSkgZW1wdHlGaWVsZE1lc3NhZ2VzLnB1c2goJ0R1ZSBEYXRlIGlzIHJlcXVpcmVkJyk7XHJcbiAgXHJcbiAgLy8gQ2hlY2sgaXRlbXNcclxuICBpZiAoZXJyb3JzLml0ZW1zICYmIEFycmF5LmlzQXJyYXkoZXJyb3JzLml0ZW1zKSkge1xyXG4gICAgZXJyb3JzLml0ZW1zLmZvckVhY2goKGl0ZW1FcnJvcjogYW55LCBpbmRleDogbnVtYmVyKSA9PiB7XHJcbiAgICAgIGlmIChpdGVtRXJyb3I/LmRlc2NyaXB0aW9uKSBlbXB0eUZpZWxkTWVzc2FnZXMucHVzaChgSXRlbSAke2luZGV4ICsgMX06IERlc2NyaXB0aW9uIGlzIHJlcXVpcmVkYCk7XHJcbiAgICAgIGlmIChpdGVtRXJyb3I/LnF1YW50aXR5KSBlbXB0eUZpZWxkTWVzc2FnZXMucHVzaChgSXRlbSAke2luZGV4ICsgMX06IFF1YW50aXR5IGlzIHJlcXVpcmVkYCk7XHJcbiAgICAgIGlmIChpdGVtRXJyb3I/LnJhdGUpIGVtcHR5RmllbGRNZXNzYWdlcy5wdXNoKGBJdGVtICR7aW5kZXggKyAxfTogUmF0ZSBpcyByZXF1aXJlZGApO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBlbXB0eUZpZWxkTWVzc2FnZXM7XHJcbn07XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUludm9pY2UoaW5pdGlhbERhdGE/OiBJbnZvaWNlRGF0YSkge1xyXG4gIC8vIGNvbnN0IFtzZXJ2ZXJFcnJvck1lc3NhZ2UsIHNldFNlcnZlckVycm9yTWVzc2FnZV0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgLy8gY29uc3QgW3NlcnZlclN1Y2Nlc3NNZXNzYWdlLCBzZXRTZXJ2ZXJTdWNjZXNzTWVzc2FnZV0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VVc2VyKCk7XHJcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XHJcbiAgY29uc3QgW21vZGFsT3Blbiwgc2V0TW9kYWxPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBcclxuXHJcbiAgLy8gTW9kaWZ5IGluaXRpYWwgdmFsdWVzIHRvIHVzZSBpbml0aWFsRGF0YSBpZiBhdmFpbGFibGVcclxuICBjb25zdCBnZXRJbml0aWFsVmFsdWVzID0gdXNlTWVtbygoKSA9PiB7XHJcbiAgICBpZiAoIWluaXRpYWxEYXRhKSByZXR1cm4gaW5pdGlhbEludm9pY2VEYXRhO1xyXG4gICAgXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAuLi5pbml0aWFsSW52b2ljZURhdGEsXHJcbiAgICAgIC4uLmluaXRpYWxEYXRhLFxyXG4gICAgICBpbnZvaWNlRGV0YWlsczoge1xyXG4gICAgICAgIC4uLmluaXRpYWxEYXRhLmludm9pY2VEZXRhaWxzLFxyXG4gICAgICAgIG51bWJlcjogaW5pdGlhbERhdGEuaW52b2ljZURldGFpbHMubnVtYmVyLFxyXG4gICAgICAgIGRhdGU6IG5ldyBEYXRlKGluaXRpYWxEYXRhLmludm9pY2VEZXRhaWxzLmRhdGUpLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXSxcclxuICAgICAgICBkdWVEYXRlOiBuZXcgRGF0ZShpbml0aWFsRGF0YS5pbnZvaWNlRGV0YWlscy5kdWVEYXRlKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9LCBbaW5pdGlhbERhdGFdKTs7XHJcblxyXG4gY29uc3QgdmFsaWRhdGlvblNjaGVtYSA9ICB1c2VNZW1vKCgpID0+WXVwLm9iamVjdCh7XHJcbiAgICBzZW5kZXJEZXRhaWxzOiBZdXAub2JqZWN0KHtcclxuICAgICAgbmFtZTogWXVwLnN0cmluZygpLm1heCg1MCxcIlNlbmRlciBOYW1lIG11c3QgYmUgYXQgbW9zdCA1MCBjaGFyYWN0ZXJzXCIpLnJlcXVpcmVkKFwiQnVzaW5lc3MgbmFtZSBpcyByZXF1aXJlZFwiKSxcclxuICAgICAgYWRkcmVzczogWXVwLnN0cmluZygpLm1heCg2MCxcIlNlbmRlciBBZGRyZXNzIG11c3QgYmUgYXQgbW9zdCA2MCBjaGFyYWN0ZXJzXCIpLnJlcXVpcmVkKFwiQnVzaW5lc3MgYWRkcmVzcyBpcyByZXF1aXJlZFwiKSxcclxuICAgIH0pLFxyXG4gICAgcmVjaXBpZW50RGV0YWlsczogWXVwLm9iamVjdCh7XHJcbiAgICAgIGJpbGxUbzogWXVwLm9iamVjdCh7XHJcbiAgICAgICAgbmFtZTogWXVwLnN0cmluZygpLm1heCg1MCxcIkJpbGxpbmcgTmFtZSBtdXN0IGJlIGF0IG1vc3QgNTAgY2hhcmFjdGVyc1wiKS5yZXF1aXJlZChcIlJlY2lwaWVudCBuYW1lIGlzIHJlcXVpcmVkXCIpLFxyXG4gICAgICAgIGFkZHJlc3M6IFl1cC5zdHJpbmcoKS5tYXgoNjAsXCJCaWxsaW5nIEFkZHJlc3MgbXVzdCBiZSBhdCBtb3N0IDYwIGNoYXJhY3RlcnNcIikucmVxdWlyZWQoXCJCaWxsaW5nIGFkZHJlc3MgaXMgcmVxdWlyZWRcIiksXHJcbiAgICAgIH0pLFxyXG4gICAgICBzaGlwVG86IFl1cC5vYmplY3Qoe1xyXG4gICAgICAgIG5hbWU6IFl1cC5zdHJpbmcoKS5tYXgoNTAsXCJTaGlwcGluZyBOYW1lIG11c3QgYmUgYXQgbW9zdCA1MCBjaGFyYWN0ZXJzXCIpLFxyXG4gICAgICAgIGFkZHJlc3M6IFl1cC5zdHJpbmcoKS5tYXgoNjAsXCJTaGlwcGluZyBBZGRyZXNzIG11c3QgYmUgYXQgbW9zdCA2MCBjaGFyYWN0ZXJzXCIpLFxyXG4gICAgICB9KSxcclxuICAgIH0pLFxyXG4gICAgaW52b2ljZURldGFpbHM6IFl1cC5vYmplY3Qoe1xyXG4gICAgICBudW1iZXI6IFl1cC5zdHJpbmcoKS5yZXF1aXJlZChcIkludm9pY2UgbnVtYmVyIGlzIHJlcXVpcmVkXCIpLFxyXG4gICAgICBkYXRlOiBZdXAuZGF0ZSgpLnJlcXVpcmVkKFwiSW52b2ljZSBkYXRlIGlzIHJlcXVpcmVkXCIpLFxyXG4gICAgICBkdWVEYXRlOiBZdXAuZGF0ZSgpLnJlcXVpcmVkKFwiRHVlIGRhdGUgaXMgcmVxdWlyZWRcIiksXHJcbiAgICB9KSxcclxuICAgIGl0ZW1zOiBZdXAuYXJyYXkoKVxyXG4gICAgICAub2YoXHJcbiAgICAgICAgWXVwLm9iamVjdCh7XHJcbiAgICAgICAgICBkZXNjcmlwdGlvbjogWXVwLnN0cmluZygpLnJlcXVpcmVkKFwiSXRlbSBkZXNjcmlwdGlvbiBpcyByZXF1aXJlZFwiKSxcclxuICAgICAgICAgIHF1YW50aXR5OiBZdXAubnVtYmVyKCkubWluKDEsIFwiUXVhbnRpdHkgbXVzdCBiZSBhdCBsZWFzdCAxXCIpLnJlcXVpcmVkKFwiUXVhbnRpdHkgaXMgcmVxdWlyZWRcIiksXHJcbiAgICAgICAgICByYXRlOiBZdXAubnVtYmVyKCkubWluKDAsIFwiUmF0ZSBtdXN0IGJlIHBvc2l0aXZlXCIpLnJlcXVpcmVkKFwiUmF0ZSBpcyByZXF1aXJlZFwiKSxcclxuICAgICAgICB9KVxyXG4gICAgICApXHJcbiAgfSksIFtdKTtcclxuICAvLyAgY29uc29sZS5sb2coXCJpbml0aWFsOlwiLGluaXRpYWxEYXRhKVxyXG4gIGNvbnN0IGZvcm1payA9IHVzZUZvcm1payh7XHJcbiAgICBpbml0aWFsVmFsdWVzOiBnZXRJbml0aWFsVmFsdWVzLFxyXG4gICAgdmFsaWRhdGlvblNjaGVtYSxcclxuICAgIGVuYWJsZVJlaW5pdGlhbGl6ZTogdHJ1ZSxcclxuICAgIHZhbGlkYXRlT25CbHVyOiB0cnVlLFxyXG4gICAgdmFsaWRhdGVPbkNoYW5nZTogdHJ1ZSxcclxuICAgIG9uU3VibWl0OiBhc3luYyAodmFsdWVzLCB7IHNldFN1Ym1pdHRpbmcsIHJlc2V0Rm9ybSB9KSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgICAvLyBDaGVjayBmb3IgdmFsaWRhdGlvbiBlcnJvcnMgZmlyc3RcclxuICAgICAgICBjb25zdCBlcnJvcnMgPSBhd2FpdCBmb3JtaWsudmFsaWRhdGVGb3JtKHZhbHVlcyk7XHJcbiAgICAgICAgY29uc3QgZW1wdHlGaWVsZE1lc3NhZ2VzID0gZ2V0RW1wdHlGaWVsZHMoZXJyb3JzKTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAoT2JqZWN0LmtleXMoZXJyb3JzKS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAvLyBTZXQgYWxsIGZpZWxkcyBhcyB0b3VjaGVkIHRvIHNob3cgRm9ybWlrIGVycm9yc1xyXG4gICAgICAgICAgZm9ybWlrLnNldFRvdWNoZWQoe1xyXG4gICAgICAgICAgICBzZW5kZXJEZXRhaWxzOiB7IG5hbWU6IHRydWUsIGFkZHJlc3M6IHRydWUgfSxcclxuICAgICAgICAgICAgcmVjaXBpZW50RGV0YWlsczogeyBiaWxsVG86IHsgbmFtZTogdHJ1ZSwgYWRkcmVzczogdHJ1ZSB9IH0sXHJcbiAgICAgICAgICAgIGludm9pY2VEZXRhaWxzOiB7IG51bWJlcjogdHJ1ZSwgZGF0ZTogdHJ1ZSwgZHVlRGF0ZTogdHJ1ZSB9LFxyXG4gICAgICAgICAgICBpdGVtczogZm9ybWlrLnZhbHVlcy5pdGVtcy5tYXAoKCkgPT4gKHsgZGVzY3JpcHRpb246IHRydWUsIHF1YW50aXR5OiB0cnVlLCByYXRlOiB0cnVlIH0pKVxyXG4gICAgICAgICAgfSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgLy8gU2hvdyBpbmRpdmlkdWFsIHRvYXN0IG5vdGlmaWNhdGlvbnMgZm9yIGVhY2ggZW1wdHkgZmllbGRcclxuICAgICAgICAgIGVtcHR5RmllbGRNZXNzYWdlcy5mb3JFYWNoKG1lc3NhZ2UgPT4ge1xyXG4gICAgICAgICAgICB0b2FzdC5lcnJvcihtZXNzYWdlLCB7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246IFwiYm90dG9tLXJpZ2h0XCIsXHJcbiAgICAgICAgICAgICAgYXV0b0Nsb3NlOiA1MDAwLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgcmV0dXJuOyAvLyBTdG9wIHN1Ym1pc3Npb24gaWYgdGhlcmUgYXJlIHZhbGlkYXRpb24gZXJyb3JzXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBpc0VkaXRpbmcgPSAhIWluaXRpYWxEYXRhO1xyXG4gICAgICAgIGNvbnN0IHVybCA9IGlzRWRpdGluZyBcclxuICAgICAgICAgID8gYCR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0VSVkVSfS9hcGkvdjEvaW52b2ljZS9pbnZvaWNlcy8ke2luaXRpYWxEYXRhLl9pZH1gXHJcbiAgICAgICAgICA6IGAke3Byb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NFUlZFUn0vYXBpL3YxL2ludm9pY2UvaW52b2ljZXNgO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IG1ldGhvZCA9IGlzRWRpdGluZyA/ICdwdXQnIDogJ3Bvc3QnO1xyXG5cclxuICAgICAgICAvLyBDYWxjdWxhdGUgZmluYWwgdG90YWxzXHJcbiAgICAgICAgY29uc3QgY2FsY3VsYXRlZFRvdGFscyA9IHtcclxuICAgICAgICAgIC4uLnZhbHVlcy50b3RhbHMsXHJcbiAgICAgICAgICBzdWJ0b3RhbDogY2FsY3VsYXRlU3VidG90YWwodmFsdWVzLml0ZW1zKSxcclxuICAgICAgICAgIHRheDogY2FsY3VsYXRlVGF4KGNhbGN1bGF0ZVN1YnRvdGFsKHZhbHVlcy5pdGVtcyksIHZhbHVlcy50b3RhbHMudGF4UmF0ZSksXHJcbiAgICAgICAgICBkaXNjb3VudDogY2FsY3VsYXRlRGlzY291bnQoXHJcbiAgICAgICAgICAgIGNhbGN1bGF0ZVN1YnRvdGFsKHZhbHVlcy5pdGVtcyksXHJcbiAgICAgICAgICAgIHZhbHVlcy50b3RhbHMuZGlzY291bnRUeXBlXHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICAgc2hpcHBpbmc6IGNhbGN1bGF0ZVNoaXBwaW5nKFxyXG4gICAgICAgICAgICBjYWxjdWxhdGVTdWJ0b3RhbCh2YWx1ZXMuaXRlbXMpLFxyXG4gICAgICAgICAgICB2YWx1ZXMudG90YWxzLnNoaXBwaW5nLFxyXG4gICAgICAgICAgICB2YWx1ZXMudG90YWxzLnNoaXBwaW5nVHlwZVxyXG4gICAgICAgICAgKSxcclxuICAgICAgICB9O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNhbGN1bGF0ZWRUb3RhbHMudG90YWwgPSAgTnVtYmVyKGNhbGN1bGF0ZVRvdGFsKFxyXG4gICAgICAgICAgY2FsY3VsYXRlZFRvdGFscy5zdWJ0b3RhbCxcclxuICAgICAgICAgIGNhbGN1bGF0ZWRUb3RhbHMudGF4LFxyXG4gICAgICAgICAgY2FsY3VsYXRlZFRvdGFscy5kaXNjb3VudCxcclxuICAgICAgICAgIGNhbGN1bGF0ZWRUb3RhbHMuc2hpcHBpbmdcclxuICAgICAgICApKTtcclxuIFxyXG4gICAgICAgIGNhbGN1bGF0ZWRUb3RhbHMuYmFsYW5jZUR1ZSA9ICBOdW1iZXIoY2FsY3VsYXRlZFRvdGFscy50b3RhbCAtIGNhbGN1bGF0ZWRUb3RhbHMuYW1vdW50UGFpZCk7XHJcblxyXG4gICAgICAgIC8vIFByZXBhcmUgdGhlIGZpbmFsIHZhbHVlc1xyXG4gICAgICAgIGxldCBmaW5hbFZhbHVlcyA9IHtcclxuICAgICAgICAgIC4uLnZhbHVlcyxcclxuICAgICAgICAgIHVzZXJJZDogdXNlcj8udXNlcj8uX2lkLFxyXG4gICAgICAgICAgdG90YWxzOiBjYWxjdWxhdGVkVG90YWxzLFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGlmIChpc0VkaXRpbmcpIHtcclxuICAgICAgICAgIC8vIEZvciB1cGRhdGVzLCBlbnN1cmUgd2Uga2VlcCB0aGUgb3JpZ2luYWwgaW52b2ljZSBkZXRhaWxzXHJcbiAgICAgICAgICBmaW5hbFZhbHVlcyA9IHtcclxuICAgICAgICAgICAgLi4uZmluYWxWYWx1ZXMsXHJcbiAgICAgICAgICAgIGludm9pY2VEZXRhaWxzOiB7XHJcbiAgICAgICAgICAgICAgLi4uZmluYWxWYWx1ZXMuaW52b2ljZURldGFpbHMsXHJcbiAgICAgICAgICAgICAgbnVtYmVyOiBpbml0aWFsRGF0YS5pbnZvaWNlRGV0YWlscy5udW1iZXIsXHJcbiAgICAgICAgICAgICAgZGF0ZTogaW5pdGlhbERhdGEuaW52b2ljZURldGFpbHMuZGF0ZSxcclxuICAgICAgICAgICAgICBkdWVEYXRlOiBpbml0aWFsRGF0YS5pbnZvaWNlRGV0YWlscy5kdWVEYXRlLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQ2xlYW4gTW9uZ29EQiBmaWVsZHNcclxuICAgICAgICBmaW5hbFZhbHVlcyA9IGNsZWFuTW9uZ29GaWVsZHMoZmluYWxWYWx1ZXMpO1xyXG5cclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zW21ldGhvZF0odXJsLCBmaW5hbFZhbHVlcywgeyB3aXRoQ3JlZGVudGlhbHM6IHRydWUgfSk7XHJcblxyXG4gICAgICAgIGlmIChyZXNwb25zZS5kYXRhKSB7XHJcbiAgICAgICAgICB0b2FzdC5zdWNjZXNzKGlzRWRpdGluZyA/ICdJbnZvaWNlIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5JyA6ICdJbnZvaWNlIHNhdmVkIHN1Y2Nlc3NmdWxseScse1xyXG4gICAgICAgICAgICBwb3NpdGlvbjpcImJvdHRvbS1yaWdodFwiXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgaWYgKCFpc0VkaXRpbmcpIHtcclxuICAgICAgICAgICAgcmVzZXRGb3JtKCk7XHJcbiAgICAgICAgICAgIGF3YWl0IGdlbmVyYXRlSW52b2ljZU51bWJlcigpO1xyXG4gICAgICAgICAgICBzZXRNb2RhbE9wZW4odHJ1ZSk7XHJcbiAgICAgICAgICAgcm91dGVyLnB1c2goYC91c2VyL2QvJHtyZXNwb25zZS5kYXRhLmludm9pY2UuX2lkfWApOyAvLyBSZWRpcmVjdCB0byAvdXNlci9teWludm9pY2Ugd2hlbiBhIG5ldyBpbnZvaWNlIGlzIHNhdmVkXHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByb3V0ZXIucHVzaChgL3VzZXIvZC8ke3Jlc3BvbnNlLmRhdGEuX2lkfWApOyAvLyBSZWRpcmVjdCB0byAvdXNlci9kL1tpZF0gd2hlbiBhbiBpbnZvaWNlIGlzIHVwZGF0ZWRcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIk9wZXJhdGlvbiBmYWlsZWQ6XCIsIGVycm9yKTtcclxuICAgICAgIHRvYXN0LmVycm9yKFxyXG4gICAgICAgICAgYXhpb3MuaXNBeGlvc0Vycm9yKGVycm9yKVxyXG4gICAgICAgICAgICA/IGVycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8IGVycm9yLm1lc3NhZ2VcclxuICAgICAgICAgICAgOiAnU29tZXRoaW5nIHdlbnQgd3JvbmcuIFBsZWFzZSB0cnkgYWdhaW4uJyx7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246XCJib3R0b20tcmlnaHRcIlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHNldFNlcnZlckVycm9yTWVzc2FnZSgnJyksIDUwMDApO1xyXG4gICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgIHNldFN1Ym1pdHRpbmcoZmFsc2UpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gIH0pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgLy8gT25seSBnZW5lcmF0ZSBpbnZvaWNlIG51bWJlciBmb3IgbmV3IGludm9pY2VzXHJcbiAgICBpZiAodXNlcj8udXNlci5faWQgJiYgIWluaXRpYWxEYXRhKSB7XHJcbiAgICAgIGdlbmVyYXRlSW52b2ljZU51bWJlcigpO1xyXG4gICAgfVxyXG4gIH0sIFt1c2VyLCBpbml0aWFsRGF0YV0pO1xyXG5cclxuICBjb25zdCBnZW5lcmF0ZUludm9pY2VOdW1iZXIgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XHJcbiAgICBpZiAoIXVzZXI/LnVzZXIuX2lkKSByZXR1cm47XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoXHJcbiAgICAgICAgYCR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0VSVkVSfS9hcGkvdjEvaW52b2ljZS9pbnZvaWNlcy91c2VySWQvJHt1c2VyLnVzZXIuX2lkfWBcclxuICAgICAgKTtcclxuICAgICAgY29uc3QgaW52b2ljZXMgPSByZXNwb25zZS5kYXRhO1xyXG4gICAgICBsZXQgbmV3SW52b2ljZU51bWJlciA9IFwiSU5WLTAwMDFcIjtcclxuICAgICAgXHJcbiAgICAgIGlmIChpbnZvaWNlcz8ubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGNvbnN0IGxhdGVzdEludm9pY2UgPSBpbnZvaWNlc1tpbnZvaWNlcy5sZW5ndGggLSAxXTtcclxuICAgICAgICBpZiAobGF0ZXN0SW52b2ljZS5pbnZvaWNlRGV0YWlscz8ubnVtYmVyKSB7XHJcbiAgICAgICAgICBjb25zdCBsYXN0TnVtYmVyID0gcGFyc2VJbnQoXHJcbiAgICAgICAgICAgIGxhdGVzdEludm9pY2UuaW52b2ljZURldGFpbHMubnVtYmVyLnJlcGxhY2UoXCJJTlYtXCIsIFwiXCIpLFxyXG4gICAgICAgICAgICAxMFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIG5ld0ludm9pY2VOdW1iZXIgPSBgSU5WLSR7U3RyaW5nKGxhc3ROdW1iZXIgKyAxKS5wYWRTdGFydCg0LCBcIjBcIil9YDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGZvcm1pay5zZXRGaWVsZFZhbHVlKFwiaW52b2ljZURldGFpbHMubnVtYmVyXCIsIG5ld0ludm9pY2VOdW1iZXIpO1xyXG4gICAgICBmb3JtaWsuc2V0RmllbGRWYWx1ZShcInNlbmRlckRldGFpbHMubmFtZVwiLCB1c2VyLnVzZXIuZmlyc3ROYW1lIHx8IFwiXCIpO1xyXG4gICAgICBmb3JtaWsuc2V0RmllbGRWYWx1ZShcInNlbmRlckRldGFpbHMuYWRkcmVzc1wiLCB1c2VyLnVzZXIuYWRkcmVzcyB8fCBcIlwiKTtcclxuICAgICAgZm9ybWlrLnNldEZpZWxkVmFsdWUoXCJzZW5kZXJEZXRhaWxzLmxvZ29cIiwgdXNlci51c2VyLmxvZ28gfHwgXCJcIik7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgaW52b2ljZXM6XCIsIGVycm9yKTtcclxuICAgIH1cclxuICB9LCBbdXNlcj8udXNlci5faWQsIGZvcm1pay5zZXRGaWVsZFZhbHVlXSk7XHJcblxyXG4gICBjb25zdCBnZW5lcmF0ZVBERiA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGludm9pY2VEYXRhV2l0aElkID0ge1xyXG4gICAgICAgIC4uLmZvcm1pay52YWx1ZXMsXHJcbiAgICAgICAgX2lkOiBpbml0aWFsRGF0YT8uX2lkIHx8ICdkdW1teS1pZCcsIC8vIEFkZCBhIGR1bW15IG9yIHJlYWwgX2lkIGhlcmVcclxuICAgICAgfTtcclxuICAgICAgY29uc3QgcGRmQmxvYiA9IGF3YWl0IGdlbmVyYXRlSW52b2ljZVBERihpbnZvaWNlRGF0YVdpdGhJZCk7XHJcbiAgICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwocGRmQmxvYik7XHJcbiAgICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbiAgICAgIGxpbmsuaHJlZiA9IHVybDtcclxuICAgICAgbGluay5kb3dubG9hZCA9IGBpbnZvaWNlLSR7Zm9ybWlrLnZhbHVlcy5pbnZvaWNlRGV0YWlscy5udW1iZXIgfHwgJ2RyYWZ0J30ucGRmYDtcclxuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcclxuICAgICAgbGluay5jbGljaygpO1xyXG4gICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xyXG4gICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZW5lcmF0aW5nIFBERjonLCBlcnJvcik7XHJcbiAgICB9XHJcbiAgfSwgW2Zvcm1pay52YWx1ZXMsIGluaXRpYWxEYXRhXSk7XHJcbiAgLy8gY29uc3QgZ2VuZXJhdGVQREYgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XHJcbiAgLy8gICB0cnkge1xyXG4gIC8vICAgICBjb25zdCBpbnZvaWNlRGF0YVdpdGhJZCA9IHtcclxuICAvLyAgICAgICAuLi5mb3JtaWsudmFsdWVzLFxyXG4gIC8vICAgICAgIF9pZDogaW5pdGlhbERhdGE/Ll9pZCB8fCAnZHVtbXktaWQnLCAvLyBBZGQgYSBkdW1teSBvciByZWFsIF9pZCBoZXJlXHJcbiAgLy8gICAgIH07XHJcbiAgLy8gICAgIGNvbnN0IHBkZkJsb2IgPSBhd2FpdCBnZW5lcmF0ZUludm9pY2Vkb2MoaW52b2ljZURhdGFXaXRoSWQpO1xyXG4gIC8vICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKHBkZkJsb2IpO1xyXG4gIC8vICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gIC8vICAgICBsaW5rLmhyZWYgPSB1cmw7XHJcbiAgLy8gICAgIGxpbmsuZG93bmxvYWQgPSBgaW52b2ljZS0ke2Zvcm1pay52YWx1ZXMuaW52b2ljZURldGFpbHMubnVtYmVyIHx8ICdkcmFmdCd9LnBkZmA7XHJcbiAgLy8gICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7XHJcbiAgLy8gICAgIGxpbmsuY2xpY2soKTtcclxuICAvLyAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKTtcclxuICAvLyAgICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xyXG4gIC8vICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAvLyAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2VuZXJhdGluZyBQREY6JywgZXJyb3IpO1xyXG4gIC8vICAgfVxyXG4gIC8vIH0sIFtmb3JtaWsudmFsdWVzLCBpbml0aWFsRGF0YV0pO1xyXG4gIFxyXG5cclxuICAvLyBVcGRhdGUgZnVuY3Rpb25zIHRoYXQgd29yayB3aXRoIGZvcm1pa1xyXG4gIGNvbnN0IHVwZGF0ZVNlbmRlckRldGFpbHMgPSB1c2VDYWxsYmFjaygoZGV0YWlsczogdHlwZW9mIGluaXRpYWxJbnZvaWNlRGF0YS5zZW5kZXJEZXRhaWxzKSA9PiB7XHJcbiAgICBmb3JtaWsuc2V0RmllbGRWYWx1ZShcInNlbmRlckRldGFpbHNcIiwgZGV0YWlscyk7XHJcbiAgfSwgW2Zvcm1pay5zZXRGaWVsZFZhbHVlXSk7XHJcblxyXG4gIGNvbnN0IHVwZGF0ZVJlY2lwaWVudERldGFpbHMgPSB1c2VDYWxsYmFjaygoZGV0YWlsczogdHlwZW9mIGluaXRpYWxJbnZvaWNlRGF0YS5yZWNpcGllbnREZXRhaWxzKSA9PiB7XHJcbiAgICBmb3JtaWsuc2V0RmllbGRWYWx1ZShcInJlY2lwaWVudERldGFpbHNcIiwgZGV0YWlscyk7XHJcbiAgfSwgW2Zvcm1pay5zZXRGaWVsZFZhbHVlXSk7XHJcblxyXG4gIGNvbnN0IHVwZGF0ZUludm9pY2VEZXRhaWxzID0gdXNlQ2FsbGJhY2soKGRldGFpbHM6IHR5cGVvZiBpbml0aWFsSW52b2ljZURhdGEuaW52b2ljZURldGFpbHMpID0+IHtcclxuICAgIGZvcm1pay5zZXRGaWVsZFZhbHVlKFwiaW52b2ljZURldGFpbHNcIiwgZGV0YWlscyk7XHJcbiAgfSwgW2Zvcm1pay5zZXRGaWVsZFZhbHVlXSk7XHJcblxyXG4gIGNvbnN0IHVwZGF0ZUl0ZW1zID0gdXNlQ2FsbGJhY2soKGl0ZW1zOiB0eXBlb2YgaW5pdGlhbEludm9pY2VEYXRhLml0ZW1zKSA9PiB7XHJcbiAgICBmb3JtaWsuc2V0RmllbGRWYWx1ZShcIml0ZW1zXCIsIGl0ZW1zKTtcclxuICAgIFxyXG4gICAgLy8gUmVjYWxjdWxhdGUgdG90YWxzXHJcbiAgICBjb25zdCBzdWJ0b3RhbCA9IGNhbGN1bGF0ZVN1YnRvdGFsKGl0ZW1zKTtcclxuICAgIGNvbnN0IHRheCA9IGNhbGN1bGF0ZVRheChzdWJ0b3RhbCwgZm9ybWlrLnZhbHVlcy50b3RhbHMudGF4UmF0ZSk7XHJcbiAgICBjb25zdCBkaXNjb3VudCA9IGNhbGN1bGF0ZURpc2NvdW50KFxyXG4gICAgICBzdWJ0b3RhbCxcclxuICAgICAgZm9ybWlrLnZhbHVlcy50b3RhbHMuZGlzY291bnRUeXBlXHJcbiAgICApO1xyXG4gICAgY29uc3Qgc2hpcHBpbmcgPSBjYWxjdWxhdGVTaGlwcGluZyhcclxuICAgICAgc3VidG90YWwsXHJcbiAgICAgIGZvcm1pay52YWx1ZXMudG90YWxzLnNoaXBwaW5nLFxyXG4gICAgICBmb3JtaWsudmFsdWVzLnRvdGFscy5zaGlwcGluZ1R5cGVcclxuICAgICk7XHJcbiAgICBjb25zdCB0b3RhbCA9IGNhbGN1bGF0ZVRvdGFsKHN1YnRvdGFsLCB0YXgsIGRpc2NvdW50LCBzaGlwcGluZyk7XHJcbiAgICBjb25zdCBiYWxhbmNlRHVlID0gdG90YWwgLSBmb3JtaWsudmFsdWVzLnRvdGFscy5hbW91bnRQYWlkO1xyXG4vLyBjb25zb2xlLmxvZyhiYWxhbmNlRHVlKVxyXG4gICAgZm9ybWlrLnNldEZpZWxkVmFsdWUoXCJ0b3RhbHNcIiwge1xyXG4gICAgICAuLi5mb3JtaWsudmFsdWVzLnRvdGFscyxcclxuICAgICAgc3VidG90YWwsXHJcbiAgICAgIHRheCxcclxuICAgICAgZGlzY291bnQsXHJcbiAgICAgIHRvdGFsLFxyXG4gICAgICBiYWxhbmNlRHVlLFxyXG4gICAgfSk7XHJcbiAgfSwgW2Zvcm1pay5zZXRGaWVsZFZhbHVlLCBmb3JtaWsudmFsdWVzLnRvdGFsc10pO1xyXG5cclxuICBjb25zdCB1cGRhdGVUb3RhbHMgPSAodG90YWxzOiB0eXBlb2YgaW5pdGlhbEludm9pY2VEYXRhLnRvdGFscykgPT4ge1xyXG4gICAgLy8gUmVjYWxjdWxhdGUgc3VidG90YWwsIHRheCwgZGlzY291bnQsIGFuZCBzaGlwcGluZyBiYXNlZCBvbiB0aGUgaXRlbXNcclxuICAgIGNvbnN0IHN1YnRvdGFsID0gY2FsY3VsYXRlU3VidG90YWwoZm9ybWlrLnZhbHVlcy5pdGVtcyk7XHJcbiAgICBjb25zdCB0YXggPSBjYWxjdWxhdGVUYXgoc3VidG90YWwsIHRvdGFscy50YXhSYXRlKTtcclxuICAgIGNvbnN0IGRpc2NvdW50ID0gY2FsY3VsYXRlRGlzY291bnQoc3VidG90YWwsIHRvdGFscy5kaXNjb3VudFR5cGUpO1xyXG4gICAgY29uc3Qgc2hpcHBpbmcgPSBjYWxjdWxhdGVTaGlwcGluZyhzdWJ0b3RhbCwgdG90YWxzLnNoaXBwaW5nLCB0b3RhbHMuc2hpcHBpbmdUeXBlKTtcclxuICAgIFxyXG4gICAgLy8gS2VlcCB0aGUgdG90YWwgYXMgdGhlIGNhbGN1bGF0ZWQgdmFsdWUsIGRvbid0IG1vZGlmeSBpdCBiYXNlZCBvbiB0aGUgYW1vdW50UGFpZFxyXG4gICAgY29uc3QgdG90YWwgPSBjYWxjdWxhdGVUb3RhbChzdWJ0b3RhbCwgdGF4LCBkaXNjb3VudCwgc2hpcHBpbmcpO1xyXG4gIFxyXG4gICAgLy8gT25seSB1cGRhdGUgdGhlIGJhbGFuY2UgZHVlLCBzdWJ0cmFjdGluZyB0aGUgYW1vdW50IHBhaWQgZnJvbSB0aGUgdG90YWxcclxuICAgIGNvbnN0IGJhbGFuY2VEdWUgPSB0b3RhbCAtIHRvdGFscy5hbW91bnRQYWlkO1xyXG4gIFxyXG4gICAgLy8gVXBkYXRlIGZvcm1payB3aXRoIHRoZSBuZXcgdG90YWxzXHJcbiAgICBmb3JtaWsuc2V0RmllbGRWYWx1ZShcInRvdGFsc1wiLCB7XHJcbiAgICAgIC4uLnRvdGFscyxcclxuICAgICAgc3VidG90YWwsXHJcbiAgICAgIHRheCxcclxuICAgICAgZGlzY291bnQsXHJcbiAgICAgIHRvdGFsLCAgLy8gS2VlcCB0b3RhbCB1bmNoYW5nZWRcclxuICAgICAgYmFsYW5jZUR1ZSwgIC8vIFVwZGF0ZSBiYWxhbmNlIGR1ZVxyXG4gICAgfSk7XHJcbiAgfTtcclxuICBcclxuXHJcbiAgY29uc3QgdXBkYXRlTm90ZXMgPSAobm90ZXM6IHN0cmluZykgPT4ge1xyXG4gICAgZm9ybWlrLnNldEZpZWxkVmFsdWUoXCJub3Rlc1wiLCBub3Rlcyk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdXBkYXRlVGVybXMgPSAodGVybXM6IHN0cmluZykgPT4ge1xyXG4gICAgZm9ybWlrLnNldEZpZWxkVmFsdWUoXCJ0ZXJtc1wiLCB0ZXJtcyk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgc2F2ZUludm9pY2UgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAvLyBWYWxpZGF0ZSBmb3JtIGFuZCBzaG93IGJvdGggRm9ybWlrIGVycm9ycyBhbmQgdG9hc3Qgbm90aWZpY2F0aW9uc1xyXG4gICAgY29uc3QgZXJyb3JzID0gYXdhaXQgZm9ybWlrLnZhbGlkYXRlRm9ybSgpO1xyXG4gICAgY29uc3QgZW1wdHlGaWVsZE1lc3NhZ2VzID0gZ2V0RW1wdHlGaWVsZHMoZXJyb3JzKTtcclxuICAgIFxyXG4gICAgLy8gU2V0IGFsbCBmaWVsZHMgYXMgdG91Y2hlZCB0byBzaG93IEZvcm1payBlcnJvcnNcclxuICAgIGZvcm1pay5zZXRUb3VjaGVkKHtcclxuICAgICAgc2VuZGVyRGV0YWlsczogeyBuYW1lOiB0cnVlLCBhZGRyZXNzOiB0cnVlIH0sXHJcbiAgICAgIHJlY2lwaWVudERldGFpbHM6IHsgYmlsbFRvOiB7IG5hbWU6IHRydWUsIGFkZHJlc3M6IHRydWUgfSB9LFxyXG4gICAgICBpbnZvaWNlRGV0YWlsczogeyBudW1iZXI6IHRydWUsIGRhdGU6IHRydWUsIGR1ZURhdGU6IHRydWUgfSxcclxuICAgICAgaXRlbXM6IGZvcm1pay52YWx1ZXMuaXRlbXMubWFwKCgpID0+ICh7IGRlc2NyaXB0aW9uOiB0cnVlLCBxdWFudGl0eTogdHJ1ZSwgcmF0ZTogdHJ1ZSB9KSkgXHJcbiAgICB9LCB0cnVlKTtcclxuICAgIFxyXG4gICAgLy8gU2hvdyBpbmRpdmlkdWFsIHRvYXN0IG5vdGlmaWNhdGlvbnMgZm9yIGVhY2ggZW1wdHkgZmllbGRcclxuICAgIGVtcHR5RmllbGRNZXNzYWdlcy5mb3JFYWNoKG1lc3NhZ2UgPT4ge1xyXG4gICAgICB0b2FzdC5lcnJvcihtZXNzYWdlLCB7XHJcbiAgICAgICAgcG9zaXRpb246IFwiYm90dG9tLXJpZ2h0XCIsXHJcbiAgICAgICAgYXV0b0Nsb3NlOiA1MDAwLFxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAvLyBDb250aW51ZSB3aXRoIGZvcm0gc3VibWlzc2lvblxyXG4gICAgaWYgKE9iamVjdC5rZXlzKGVycm9ycykubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgZm9ybWlrLnN1Ym1pdEZvcm0oKTtcclxuICAgICAgICAvLyBzZXRTYXZlU3VjY2Vzcyh0cnVlKTtcclxuICAgICAgICBzZXRNb2RhbE9wZW4odHJ1ZSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHNhdmluZyBpbnZvaWNlOlwiLCBlcnJvcik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIGZvcm1pay5oYW5kbGVTdWJtaXQoKTtcclxuICB9O1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgaW52b2ljZURhdGE6IGZvcm1pay52YWx1ZXMsXHJcbiAgICB1cGRhdGVTZW5kZXJEZXRhaWxzLFxyXG4gICAgdXBkYXRlUmVjaXBpZW50RGV0YWlscyxcclxuICAgIHVwZGF0ZUludm9pY2VEZXRhaWxzLFxyXG4gICAgdXBkYXRlSXRlbXMsXHJcbiAgICB1cGRhdGVUb3RhbHMsXHJcbiAgICB1cGRhdGVOb3RlcyxcclxuICAgIHVwZGF0ZVRlcm1zLFxyXG4gICAgZ2VuZXJhdGVQREYsXHJcbiAgICBzYXZlSW52b2ljZSxcclxuICAgIGZvcm1FcnJvcnM6IGZvcm1pay5lcnJvcnMsXHJcbiAgICBmb3JtVG91Y2hlZDogZm9ybWlrLnRvdWNoZWQsXHJcbiAgICBmb3JtaWssXHJcbiAgfTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJ1c2VDYWxsYmFjayIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlTWVtbyIsImdlbmVyYXRlSW52b2ljZVBERiIsInRvYXN0IiwiY2FsY3VsYXRlU3VidG90YWwiLCJjYWxjdWxhdGVUYXgiLCJjYWxjdWxhdGVEaXNjb3VudCIsImNhbGN1bGF0ZVRvdGFsIiwiY2FsY3VsYXRlU2hpcHBpbmciLCJheGlvcyIsInVzZVVzZXIiLCJ1c2VGb3JtaWsiLCJZdXAiLCJ1c2VSb3V0ZXIiLCJpbml0aWFsSW52b2ljZURhdGEiLCJ1c2VySWQiLCJzZW5kZXJEZXRhaWxzIiwibG9nbyIsIm5hbWUiLCJhZGRyZXNzIiwicmVjaXBpZW50RGV0YWlscyIsImJpbGxUbyIsInNoaXBUbyIsImludm9pY2VEZXRhaWxzIiwibnVtYmVyIiwiZGF0ZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInNwbGl0IiwiZHVlRGF0ZSIsInBheW1lbnRUZXJtcyIsInBvTnVtYmVyIiwiY3VycmVuY3kiLCJpdGVtcyIsInRvdGFscyIsInN1YnRvdGFsIiwidGF4IiwidGF4UmF0ZSIsInNoaXBwaW5nIiwiZGlzY291bnQiLCJkaXNjb3VudFR5cGUiLCJzaGlwcGluZ1R5cGUiLCJ0b3RhbCIsImFtb3VudFBhaWQiLCJiYWxhbmNlRHVlIiwibm90ZXMiLCJ0ZXJtcyIsImNsZWFuTW9uZ29GaWVsZHMiLCJkYXRhIiwiY2xlYW5lZCIsIl9pZCIsIl9fdiIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsIml0ZW0iLCJjbGVhbmVkSXRlbSIsImdldEVtcHR5RmllbGRzIiwiZXJyb3JzIiwiZW1wdHlGaWVsZE1lc3NhZ2VzIiwicHVzaCIsImZvckVhY2giLCJpdGVtRXJyb3IiLCJpbmRleCIsImRlc2NyaXB0aW9uIiwicXVhbnRpdHkiLCJyYXRlIiwidXNlSW52b2ljZSIsImluaXRpYWxEYXRhIiwidXNlciIsInJvdXRlciIsIm1vZGFsT3BlbiIsInNldE1vZGFsT3BlbiIsImdldEluaXRpYWxWYWx1ZXMiLCJ2YWxpZGF0aW9uU2NoZW1hIiwib2JqZWN0Iiwic3RyaW5nIiwibWF4IiwicmVxdWlyZWQiLCJhcnJheSIsIm9mIiwibWluIiwiZm9ybWlrIiwiaW5pdGlhbFZhbHVlcyIsImVuYWJsZVJlaW5pdGlhbGl6ZSIsInZhbGlkYXRlT25CbHVyIiwidmFsaWRhdGVPbkNoYW5nZSIsIm9uU3VibWl0IiwidmFsdWVzIiwic2V0U3VibWl0dGluZyIsInJlc2V0Rm9ybSIsInZhbGlkYXRlRm9ybSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJzZXRUb3VjaGVkIiwibWVzc2FnZSIsImVycm9yIiwicG9zaXRpb24iLCJhdXRvQ2xvc2UiLCJpc0VkaXRpbmciLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU0VSVkVSIiwibWV0aG9kIiwiY2FsY3VsYXRlZFRvdGFscyIsIk51bWJlciIsImZpbmFsVmFsdWVzIiwicmVzcG9uc2UiLCJ3aXRoQ3JlZGVudGlhbHMiLCJzdWNjZXNzIiwiZ2VuZXJhdGVJbnZvaWNlTnVtYmVyIiwiaW52b2ljZSIsImNvbnNvbGUiLCJpc0F4aW9zRXJyb3IiLCJnZXQiLCJpbnZvaWNlcyIsIm5ld0ludm9pY2VOdW1iZXIiLCJsYXRlc3RJbnZvaWNlIiwibGFzdE51bWJlciIsInBhcnNlSW50IiwicmVwbGFjZSIsIlN0cmluZyIsInBhZFN0YXJ0Iiwic2V0RmllbGRWYWx1ZSIsImZpcnN0TmFtZSIsImdlbmVyYXRlUERGIiwiaW52b2ljZURhdGFXaXRoSWQiLCJwZGZCbG9iIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwibGluayIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImhyZWYiLCJkb3dubG9hZCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNsaWNrIiwicmVtb3ZlQ2hpbGQiLCJyZXZva2VPYmplY3RVUkwiLCJ1cGRhdGVTZW5kZXJEZXRhaWxzIiwiZGV0YWlscyIsInVwZGF0ZVJlY2lwaWVudERldGFpbHMiLCJ1cGRhdGVJbnZvaWNlRGV0YWlscyIsInVwZGF0ZUl0ZW1zIiwidXBkYXRlVG90YWxzIiwidXBkYXRlTm90ZXMiLCJ1cGRhdGVUZXJtcyIsInNhdmVJbnZvaWNlIiwic3VibWl0Rm9ybSIsImludm9pY2VEYXRhIiwiZm9ybUVycm9ycyIsImZvcm1Ub3VjaGVkIiwidG91Y2hlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-invoice.ts\n"));

/***/ })

});